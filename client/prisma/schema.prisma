// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Songs         Song[]    @relation("userSongs")
  Albums        Album[]   @relation("userAlbums")
}

model Song {
  id String @id @default(cuid())

  title     String
  duration  String
  url       String
  urlId     String
  addedAt   DateTime
  cover     String?
  userId    String
  User      User        @relation("userSongs", fields: [userId], references: [id])
  AlbumSong AlbumSong[]
}

model Album {
  id String @id @default(cuid())

  title       String
  description String
  cover       String?
  gradient    String
  userId      String
  albumSongs  AlbumSong[] @relation("albumSong")
  User        User        @relation("userAlbums", fields: [userId], references: [id])
}

model AlbumSong {
  id       String  @id @default(cuid())
  albumId  String
  songId   String
  title    String
  duration String
  cover    String?
  url      String
  urlId    String
  song     Song    @relation(fields: [songId], references: [id])
  Album    Album   @relation("albumSong", fields: [albumId], references: [id])
}
