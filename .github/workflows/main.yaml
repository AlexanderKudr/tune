name: main

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        # db
      - name: run db
        run: docker run -d --name db -p 5432:5432 -e POSTGRES_USER="${{ secrets.POSTGRES_USER }}" -e POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" -e POSTGRES_DB="${{ secrets.POSTGRES_DB }}" -v db:/var/lib/postgresql/data --expose=5432 postgres:16-alpine

      # client
      - name: stop client container
        run: docker stop tune-c
        continue-on-error: true

      - name: remove client container
        run: docker rm tune-c
        continue-on-error: true

      - name: remove client image
        run: docker rmi tune-client-production
        continue-on-error: true

      - name: build client
        run: docker build -t tune-client-production -f ./client/Dockerfile.prod --build-arg GOOGLE_ID="${{ secrets.GOOGLE_ID }}" --build-arg GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} --build-arg GOOGLE_ID=${{ secrets.GOOGLE_ID }} --build-arg OAUTH_GITHUB_ID=${{ secrets.OAUTH_GITHUB_ID }} --build-arg OAUTH_GITHUB_SECRET=${{ secrets.OAUTH_GITHUB_SECRET }} --build-arg NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} .

      - name: run client
        run: docker run -it -d --name tune-c -p 3000:3000 tune-client-production

      # music sevice
      - name: stop music-service container
        run: docker stop tune-ms
        continue-on-error: true

      - name: remove music-service container
        run: docker rm tune-ms
        continue-on-error: true

      - name: remove music-service image
        run: docker rmi tune-ms-production
        continue-on-error: true

      - name: build music-service
        run: docker build -t tune-ms-production -f ./music-service/Dockerfile.prod .

      - name: run music-service
        run: docker run -it -d --name tune-ms -p 8000:8000 -v audio:/app/src/audio tune-ms-production 
